services:
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - msnetwork

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: localhost # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - type: bind
        source: data/kafka
        target: /var/run/docker.sock
    depends_on:
      - "zookeeper"
    networks:
      - msnetwork

  mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 1
      # Change these below
      MYSQL_DATABASE: 'nba'
      MYSQL_USER: 'nathan'
      MYSQL_PASSWORD: 'nathan'
    volumes:
      - type: bind
        source: data/database
        target: /var/lib/mysql
    networks:
      - msnetwork
    network_mode: "host" 

  receiver:
    build:
      context: receiver
      dockerfile: Dockerfile
    networks:
      - msnetwork
    depends_on:
      - "kafka"
    ports:
      - 8091:8091
    network_mode: "host" 
    volumes:
      - type: bind
        source: ./logs/
        target: /logs
      - type: bind
        source: ./config
        target: /app/config

  storage:
    build:
      context: storage
      dockerfile: Dockerfile
    networks:
      - msnetwork
    depends_on:
      - mysql
      - receiver
      - kafka
    volumes:
      - type: bind
        source: ./logs/
        target: /logs
      - type: bind
        source: ./config
        target: /app/config
  
  processing:
    build:
      context: processing
      dockerfile: Dockerfile
    networks:
      - msnetwork
    ports:
      - 8092:8092
    network_mode: "host" 
    volumes:
      - type: bind
        source: ./logs/
        target: /logs
      - type: bind
        source: ./config
        target: /app/config
      - type: bind
        source: data/processing
        target: /var/

  analyzer:
    build:
      context: analyzer
      dockerfile: Dockerfile
    networks:
      - msnetwork
    depends_on:
      - "receiver"
      - kafka
    ports:
      - 8093:8093
    network_mode: "host" 
    volumes:
      - type: bind
        source: ./logs/
        target: /logs
      - type: bind
        source: ./config
        target: /app/config

# # --------------------------------------------------------------

networks:
  msnetwork:
    driver: bridge